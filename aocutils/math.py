# AUTOGENERATED! DO NOT EDIT! File to edit: 03_math.ipynb (unless otherwise specified).

__all__ = ['factors', 'gcd', 'lcm']

# Internal Cell
from collections.abc import Iterable
from collections import namedtuple, deque
import contextlib
from functools import reduce
import hashlib
import heapq
import logging
from math import sqrt, gcd
from pathlib import Path
import time
import pickle
import pandas as pd
import numpy as np


# Cell
def factors(n):
    """
     return set of divisors of a number
    """

    step = 2 if n%2 else 1
    return set(reduce(list.__add__,
                ([i, n//i] for i in range(1, int(sqrt(n))+1, step) if n % i == 0)))


# Cell
def gcd(a,b):
    largest = max(a,b)
    smallest = min(a,b)
    while True:
        rest = largest % smallest
        if rest == 0:
            return prevrest
        else:
            prevrest = rest
            largest = smallest
            smallest = rest

def lcm(a):
    lcm = a[0]
    for i in a[1:]:
        lcm = lcm*i//gcd(lcm, i)
    return lcm

